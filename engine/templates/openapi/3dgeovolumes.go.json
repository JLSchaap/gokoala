{{- /*gotype: github.com/PDOK/gokoala/engine.TemplateData*/ -}}
{
  "openapi": "3.0.1",
  "info": {
    "title": "A sample API definition based on the draft OGC API - 3D GeoVolumes candidate standard",
    "version": "0.0.2",
    "description": "This is a sample OpenAPI definition produced by the OGC 3D Container API Pilot and adapted for the July 2022 OGC API Code Sprint - The Vector Data Code Sprint.",
    "contact": {
      "name": "Open Geospatial Consortium (OGC)",
      "email": "standards-team@ogc.org",
      "url": "https://www.ogc.org/contacts"
    },
    "license": {
      "name": "OGC License",
      "url": "http://www.opengeospatial.org/legal/"
    }
  },
  "tags" : [ ],
  "paths" : {
    {{- range $index, $type := .Config.OgcAPI.GeoVolumes.Collections -}}
    {{- if $index -}},{{- end -}}
    "/collections/{{ $type.ID }}/3dtiles" : {
      "get" : {
        "tags" : [ "3D Tiles" ],
        "summary" : "retrieve the root 3D Tiles tileset of the feature collection '{{ $type.ID }}'",
        "description" : "Access a 3D Tiles 1.1 tileset with implicit quadtree tiling.",
        "operationId" : "{{ $type.ID }}.get3dTileset",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Tileset3dTiles"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    },
    {{ if and $type.GeoVolumes $type.GeoVolumes.URITemplate3dTiles }}
    "/collections/{{ $type.ID }}/3dtiles/{{ $type.GeoVolumes.URITemplate3dTiles }}" : {
    {{ else }}
    "/collections/{{ $type.ID }}/3dtiles/tiles/{level}/{x}/{y}.glb" : {
    {{ end }}
      "get" : {
        "tags" : [ "3D Tiles" ],
        "summary" : "retrieve a glTF tile of the feature collection '{{ $type.ID }}'",
        "description" : "Access a 3D Tiles 1.1 Content file, a glTF 2.0 binary file.",
        "operationId" : "{{ $type.ID }}.get3dTilesContent",
        "parameters" : [ {
          "$ref" : "#/components/parameters/level"
        }, {
          "$ref" : "#/components/parameters/x"
        }, {
          "$ref" : "#/components/parameters/y"
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/glTF"
                }
              }
            }
          },
          "204" : {
            "description" : "Tile Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    }
    {{ if and $type.GeoVolumes $type.GeoVolumes.URITemplateImplicitTilingSubtree }}
    ,
    "/collections/{{ $type.ID }}/3dtiles/{{ $type.GeoVolumes.URITemplateImplicitTilingSubtree }}" : {
      "get" : {
        "tags" : [ "3D Tiles" ],
        "summary" : "retrieve a 3D Tiles subtree of the feature collection '{{ $type.ID }}'",
        "description" : "Access a 3D Tiles 1.1 Subtree file.",
        "operationId" : "{{ $type.ID }}.get3dTilesSubtree",
        "parameters" : [ {
          "$ref" : "#/components/parameters/level"
        }, {
          "$ref" : "#/components/parameters/x"
        }, {
          "$ref" : "#/components/parameters/y"
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/octet-stream" : {
                "schema" : {
                  "$ref" : "#/components/schemas/binary"
                }
              }
            }
          },
          "204" : {
            "description" : "Tile Not Found"
          },
          "500" : {
            "description" : "Server Error"
          }
        }
      }
    }
    {{ end }}
    {{- end -}}
  },
  "components" : {
    "schemas" : {
      "Link" : {
        "required" : [ "href" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "format" : "uri-reference"
          },
          "rel" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "StringArray" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        }
      },
      "StringArrayArray" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/StringArray"
        }
      },
      "SpatialExtent" : {
        "required" : [ "bbox", "crs" ],
        "type" : "object",
        "properties" : {
          "crs" : {
            "type" : "string"
          },
          "bbox" : {
            "$ref" : "#/components/schemas/doubleArrayArray"
          }
        }
      },
      "doubleArrayArray" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/doubleArray"
        }
      },
      "Extent" : {
        "type" : "object",
        "properties" : {
          "temporal" : {
            "$ref" : "#/components/schemas/TemporalExtent"
          },
          "spatial" : {
            "$ref" : "#/components/schemas/SpatialExtent"
          }
        }
      },
      "doubleArray" : {
        "type" : "array",
        "items" : {
          "type" : "number"
        }
      },
      "TemporalExtent" : {
        "required" : [ "interval", "trs" ],
        "type" : "object",
        "properties" : {
          "interval" : {
            "$ref" : "#/components/schemas/StringArrayArray"
          },
          "trs" : {
            "type" : "string"
          }
        }
      },
      "ExternalDocumentation" : {
        "required" : [ "url" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        }
      },
      "htmlSchema" : {
        "type" : "string",
        "example" : "<html>...</html>"
      },
      "Collections" : {
        "type" : "object",
        "properties" : {
          "crs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "collections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Collection"
            }
          },
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Link"
            }
          }
        }
      },
      "Collection" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "extent" : {
            "$ref" : "#/components/schemas/Extent"
          },
          "storageCrsCoordinateEpoch" : {
            "type" : "number"
          },
          "crs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "storageCrs" : {
            "type" : "string"
          },
          "itemType" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Link"
            }
          }
        }
      },
      "featureCollectionGeoJson_building" : {
        "required" : [ "type", "features" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "FeatureCollection" ]
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/featureGeoJson_building"
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Link"
            }
          },
          "timeStamp" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/timeStamp"
          },
          "numberMatched" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberMatched"
          },
          "numberReturned" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberReturned"
          }
        }
      },
      "glTF" : {
        "type" : "string",
        "format" : "binary"
      },
      "CityJson_ignore" : {
        "required" : [ "type", "version", "CityObjects", "vertices" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "CityJSON" ]
          },
          "version" : {
            "type" : "string",
            "enum" : [ "1.0", "1.1" ]
          },
          "transform" : {
            "required" : [ "scale", "translate" ],
            "type" : "object",
            "properties" : {
              "scale" : {
                "maxItems" : 3,
                "minItems" : 3,
                "type" : "array",
                "items" : {
                  "type" : "number"
                }
              },
              "translate" : {
                "maxItems" : 3,
                "minItems" : 3,
                "type" : "array",
                "items" : {
                  "type" : "number"
                }
              }
            }
          },
          "vertices" : {
            "type" : "array",
            "items" : {
              "maxItems" : 3,
              "minItems" : 3,
              "type" : "array",
              "items" : {
                "type" : "number"
              }
            }
          },
          "metadata" : {
            "type" : "object",
            "properties" : {
              "title" : {
                "type" : "string"
              },
              "referenceSystem" : {
                "pattern" : "^http://www.opengis.net/def/crs/(EPSG|OGC)/[^/]+/[^/]+$",
                "type" : "string"
              },
              "geographicalExtent" : {
                "maxItems" : 6,
                "minItems" : 6,
                "type" : "array",
                "items" : {
                  "type" : "number"
                }
              }
            }
          },
          "CityObjects" : {
            "type" : "object",
            "additionalProperties" : {
              "required" : [ "type" ],
              "type" : "object",
              "properties" : {
                "type" : {
                  "type" : "string",
                  "enum" : [ "Building", "BuildingPart" ]
                },
                "parents" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "children" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "geometry" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "type", "lod", "boundaries" ],
                    "type" : "object",
                    "properties" : {
                      "type" : {
                        "type" : "string",
                        "enum" : [ "Solid" ]
                      },
                      "lod" : {
                        "type" : "string",
                        "enum" : [ "1", "2" ]
                      },
                      "boundaries" : {
                        "type" : "array",
                        "items" : {
                          "type" : "array",
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "array",
                              "items" : {
                                "type" : "integer",
                                "format" : "int32"
                              }
                            }
                          }
                        }
                      },
                      "semantics" : {
                        "type" : "object",
                        "properties" : {
                          "surfaces" : {
                            "type" : "array",
                            "items" : {
                              "type" : "object",
                              "properties" : {
                                "type" : {
                                  "type" : "string",
                                  "enum" : [ "CeilingSurface", "ClosureSurface", "Door", "FloorSurface", "GroundSurface", "InteriorWallSurface", "OuterCeilingSurface", "OuterFloorSurface", "RoofSurface", "WallSurface", "Window" ]
                                }
                              }
                            }
                          },
                          "values" : {
                            "type" : "array",
                            "items" : {
                              "type" : "array",
                              "items" : {
                                "type" : "integer",
                                "format" : "int32"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "address" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "ThoroughfareName" : {
                        "type" : "string"
                      },
                      "ThoroughfareNumber" : {
                        "type" : "string"
                      },
                      "LocalityName" : {
                        "type" : "string"
                      },
                      "CountryName" : {
                        "type" : "string"
                      },
                      "location" : {
                        "required" : [ "type", "lod", "boundaries" ],
                        "type" : "object",
                        "properties" : {
                          "type" : {
                            "type" : "string",
                            "enum" : [ "MultiPoint" ]
                          },
                          "lod" : {
                            "type" : "string",
                            "enum" : [ "1", "2" ]
                          },
                          "boundaries" : {
                            "type" : "array",
                            "items" : {
                              "type" : "integer",
                              "format" : "int32"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "attributes" : {
                  "type" : "object"
                }
              }
            }
          }
        }
      },
      "featureGeoJson_building" : {
        "title" : "Buildings",
        "required" : [ "type", "geometry", "properties" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Feature" ]
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Link"
            }
          },
          "id" : {
            "title" : "ALKIS-ID",
            "type" : "string"
          },
          "geometry" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/polygonGeoJSON"
          },
          "properties" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "title" : "Name",
                "type" : "string",
                "description" : "Only set for proper building names."
              },
              "measuredHeight" : {
                "title" : "Gebäudehöhe [m]",
                "type" : "number",
                "description" : "Height of the building as the difference in meters between the highest reference point and the lowest reference point of the building."
              },
              "storeysAboveGround" : {
                "title" : "Geschosse",
                "type" : "integer",
                "format" : "int32"
              },
              "roofType" : {
                "title" : "Dachform",
                "type" : "string",
                "description" : "The meaning of the individual values results from the codelist <a href=\"https://repository.gdi-de.org/schemas/adv/citygml/Codelisten/RoofTypeTypeAdV.xml\" target=\"_blank\">RoofTypeTypeAdV.xml</a>.",
                "enum" : [ "1000", "2100", "2200", "3100", "3200", "3300", "3400", "3500", "3600", "3700", "3800", "3900", "4000", "5000", "9999" ]
              },
              "creationDate" : {
                "title" : "Erzeugungsdatum",
                "type" : "string",
                "format" : "date"
              },
              "function" : {
                "title" : "Gebäudefunktion",
                "type" : "string",
                "description" : "The meaning of the individual values results from the codelist <a href=\"https://repository.gdi-de.org/schemas/adv/citygml/Codelisten/BuildingFunctionTypeAdV.xml\" target=\"_blank\">BuildingFunctionTypeAdV.xml</a>.",
                "enum" : [ "31001_1000", "31001_1010", "31001_1020", "31001_1021", "31001_1022", "31001_1023", "31001_1024", "31001_1025", "31001_1100", "31001_1110", "31001_1120", "31001_1121", "31001_1122", "31001_1123", "31001_1130", "31001_1131", "31001_1210", "31001_1220", "31001_1221", "31001_1222", "31001_1223", "31001_1310", "31001_1311", "31001_1312", "31001_1313", "31001_2000", "31001_2010", "31001_2020", "31001_2030", "31001_2040", "31001_2050", "31001_2051", "31001_2052", "31001_2053", "31001_2054", "31001_2055", "31001_2056", "31001_2060", "31001_2070", "31001_2071", "31001_2072", "31001_2073", "31001_2074", "31001_2080", "31001_2081", "31001_2082", "31001_2083", "31001_2090", "31001_2091", "31001_2092", "31001_2093", "31001_2094", "31001_2100", "31001_2110", "31001_2111", "31001_2112", "31001_2113", "31001_2114", "31001_2120", "31001_2121", "31001_2130", "31001_2131", "31001_2140", "31001_2141", "31001_2142", "31001_2143", "31001_2150", "31001_2160", "31001_2170", "31001_2171", "31001_2172", "31001_2180", "31001_2200", "31001_2210", "31001_2211", "31001_2212", "31001_2213", "31001_2220", "31001_2310", "31001_2320", "31001_2400", "31001_2410", "31001_2411", "31001_2412", "31001_2420", "31001_2421", "31001_2422", "31001_2423", "31001_2424", "31001_2430", "31001_2431", "31001_2440", "31001_2441", "31001_2442", "31001_2443", "31001_2444", "31001_2450", "31001_2451", "31001_2460", "31001_2461", "31001_2462", "31001_2463", "31001_2464", "31001_2465", "31001_2500", "31001_2501", "31001_2510", "31001_2511", "31001_2512", "31001_2513", "31001_2520", "31001_2521", "31001_2522", "31001_2523", "31001_2527", "31001_2528", "31001_2529", "31001_2540", "31001_2560", "31001_2570", "31001_2571", "31001_2580", "31001_2590", "31001_2591", "31001_2600", "31001_2610", "31001_2611", "31001_2612", "31001_2620", "31001_2621", "31001_2622", "31001_2623", "31001_2700", "31001_2720", "31001_2721", "31001_2723", "31001_2724", "31001_2726", "31001_2727", "31001_2728", "31001_2729", "31001_2732", "31001_2735", "31001_2740", "31001_2741", "31001_2742", "31001_3000", "31001_3010", "31001_3011", "31001_3012", "31001_3013", "31001_3014", "31001_3015", "31001_3016", "31001_3017", "31001_3018", "31001_3019", "31001_3020", "31001_3021", "31001_3022", "31001_3023", "31001_3024", "31001_3030", "31001_3031", "31001_3032", "31001_3033", "31001_3034", "31001_3035", "31001_3036", "31001_3037", "31001_3038", "31001_3040", "31001_3041", "31001_3042", "31001_3043", "31001_3044", "31001_3045", "31001_3046", "31001_3047", "31001_3048", "31001_3050", "31001_3051", "31001_3052", "31001_3053", "31001_3060", "31001_3061", "31001_3062", "31001_3063", "31001_3064", "31001_3065", "31001_3066", "31001_3070", "31001_3071", "31001_3072", "31001_3073", "31001_3074", "31001_3075", "31001_3080", "31001_3081", "31001_3082", "31001_3090", "31001_3091", "31001_3092", "31001_3094", "31001_3095", "31001_3097", "31001_3098", "31001_3100", "31001_3200", "31001_3210", "31001_3211", "31001_3212", "31001_3220", "31001_3221", "31001_3222", "31001_3230", "31001_3240", "31001_3241", "31001_3242", "31001_3260", "31001_3261", "31001_3262", "31001_3263", "31001_3264", "31001_3270", "31001_3271", "31001_3272", "31001_3273", "31001_3280", "31001_3281", "31001_3290", "31001_9998", "51001_1001", "51001_1002", "51001_1003", "51001_1004", "51001_1005", "51001_1006", "51001_1007", "51001_1008", "51001_1009", "51001_1010", "51001_1011", "51001_1012", "51001_9998", "51001_9999", "51002_1215", "51002_1220", "51002_1230", "51002_1250", "51002_1260", "51002_1280", "51002_1290", "51002_1330", "51002_1331", "51002_1332", "51002_1333", "51002_1350", "51002_1400", "51002_9999", "51003_1201", "51003_1205", "51003_1206", "51003_9999", "51006_1430", "51006_1431", "51006_1432", "51006_1440", "51006_1470", "51006_1490", "51006_9999", "51007_1210", "51007_1400", "51007_1500", "51007_1510", "51007_1520", "51007_9999", "51009_1610", "51009_1611", "51009_1750", "51009_9999", "11_1001", "11_1002", "11_1003", "11_1004", "11_1005", "11_1006", "11_1036", "11_1101", "11_1111", "11_1112", "11_1113", "11_1114", "11_1115", "11_1116", "11_1118", "11_1121", "11_1122", "11_1123", "11_1124", "11_1128", "11_1131", "11_1132", "11_1133", "11_1134", "11_1135", "11_1136", "11_1137", "11_1138", "11_1141", "11_1142", "11_1143", "11_1144", "11_1145", "11_1148", "11_1151", "11_1152", "11_1158", "11_1161", "11_1162", "11_1163", "11_1164", "11_1165", "11_1168", "11_1171", "11_1172", "11_1173", "11_1174", "11_1175", "11_1178", "11_1181", "11_1182", "11_1188", "11_1191", "11_1192", "11_1194", "11_1195", "11_1196", "11_1197", "11_1198", "11_1211", "11_1221", "11_1231", "11_1301", "11_1311", "11_1321", "11_1331", "11_1341", "11_1361", "11_1371", "11_1372", "11_1373", "11_1374", "11_1375", "11_1378", "11_1381", "11_1399", "11_1401", "11_1411", "11_1421", "11_1431", "11_1441", "11_1442", "11_1443", "11_1444", "11_1445", "11_1448", "11_1451", "11_1461", "11_1462", "11_1463", "11_1468", "11_1471", "11_1472", "11_1473", "11_1474", "11_1478", "11_1481", "11_1482", "11_1483", "11_1484", "11_1488", "11_1701", "11_1711", "11_1721", "11_1731", "11_1741", "11_1742", "11_1743", "11_1748", "11_1751", "11_1761", "11_1771", "11_1772", "11_1773", "11_1774", "11_1778", "11_1781", "11_1911", "11_1913", "11_2101", "11_2121", "11_2131", "11_2141", "11_2301", "11_2311", "11_2312", "11_2313", "11_2318", "11_2321", "11_2322", "11_2323", "11_2324", "11_2328", "11_2332", "11_2338", "11_2341", "11_2342", "11_2343", "11_2344", "11_2348", "11_2351", "11_2358", "11_2361", "11_2362", "11_2363", "11_2364", "11_2365", "11_2366", "11_2367", "11_2368", "11_2501", "11_2511", "11_2512", "11_2514", "11_2515", "11_2518", "11_2521", "11_2522", "11_2523", "11_2528", "11_2541", "11_2548", "11_2551", "11_2561", "11_2571", "11_2572", "11_2581", "11_2591", "11_2601", "11_2611", "11_2612", "11_2619", "11_2621", "11_2622", "11_2623", "11_2628", "11_2701", "11_2711", "11_2721", "11_2723", "11_2724", "11_2725", "11_2726", "11_2727", "11_2728", "11_2731", "11_2736", "11_2737", "11_2738", "11_2741", "11_2742", "11_2748", "11_2801", "11_2811", "11_2812", "11_2818", "11_2821", "11_2822", "11_2828", "11_2831", "11_2841", "11_2842", "11_2848", "11_2851", "11_2861", "11_2862", "11_2863", "11_2868", "11_2871", "11_2872", "11_2873", "11_2874", "11_2878", "11_2881", "11_2882", "11_2883", "11_2888", "11_2891", "11_2894", "11_2921" ]
              },
              "externalReferences" : {
                "type" : "array",
                "description" : "ALKIS-Objektidentifikator",
                "items" : {
                  "title" : "Fachdatenverbindungen",
                  "required" : [ ],
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "title" : "Bezeichnung",
                      "type" : "string"
                    },
                    "informationSystem" : {
                      "title" : "Informationssystem",
                      "type" : "string"
                    }
                  },
                  "description" : "ALKIS-Objektidentifikator"
                }
              },
              "bezugspunktDach" : {
                "title" : "Bezugspunkt Dach",
                "type" : "string",
                "enum" : [ "1000", "2000", "2100", "2200", "2300", "3000", "4000", "9998" ]
              },
              "datenquelleBodenhoehe" : {
                "title" : "Datenquelle Bodenhöhe",
                "type" : "string",
                "enum" : [ "1000", "1100", "1200", "1300", "1400", "1500", "1600", "1700", "1800", "2000", "3000", "4000" ]
              },
              "datenquelleDachhoehe" : {
                "title" : "Datenquelle Dachhöhe",
                "type" : "string",
                "enum" : [ "1000", "2000", "3000", "4000", "5000", "6000" ]
              },
              "datenquelleLage" : {
                "title" : "Datenquelle Lage",
                "type" : "string",
                "enum" : [ "1000", "1100", "1200", "1300", "2300", "2000", "3000" ]
              },
              "gemeindeschluessel" : {
                "title" : "Gemeindeschlüssel",
                "type" : "string"
              },
              "grundrissaktualitaet" : {
                "title" : "Grundrissaktualität",
                "type" : "string",
                "format" : "date"
              },
              "geometrietyp2dReferenz" : {
                "title" : "Geometrietyp 2D Referenz",
                "type" : "string"
              },
              "address" : {
                "type" : "array",
                "items" : {
                  "title" : "Adresse",
                  "required" : [ ],
                  "type" : "object",
                  "properties" : {
                    "multiPoint" : {
                      "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/multipointGeoJSON"
                    },
                    "ThoroughfareName" : {
                      "title" : "Straße",
                      "type" : "string"
                    },
                    "ThoroughfareNumber" : {
                      "title" : "Hausnummer",
                      "type" : "string"
                    },
                    "PostalCode" : {
                      "title" : "Postleitzahl",
                      "type" : "string"
                    },
                    "LocalityName" : {
                      "title" : "Stadt",
                      "type" : "string"
                    },
                    "AdministrativeArea" : {
                      "title" : "Verwaltungsbezirk",
                      "type" : "string"
                    },
                    "CountryName" : {
                      "title" : "Land",
                      "type" : "string"
                    }
                  }
                }
              },
              "surfaces" : {
                "type" : "array",
                "items" : {
                  "title" : "Begrenzungsflächen (LoD 2)",
                  "required" : [ ],
                  "type" : "object",
                  "properties" : {
                    "gml_id" : {
                      "title" : "ID",
                      "type" : "string"
                    },
                    "creationDate" : {
                      "title" : "Erzeugungsdatum",
                      "type" : "string",
                      "format" : "date"
                    },
                    "surfaceType" : {
                      "title" : "Flächentyp",
                      "type" : "string"
                    },
                    "lod2MultiSurface" : {
                      "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/multipolygonGeoJSON"
                    }
                  }
                }
              },
              "consistsOfBuildingPart" : {
                "type" : "array",
                "items" : {
                  "title" : "Gebäudeteile",
                  "required" : [ ],
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "title" : "Objekt-ID",
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "gml_id" : {
                      "title" : "GML-ID",
                      "type" : "string"
                    },
                    "name" : {
                      "title" : "Name",
                      "type" : "string",
                      "description" : "Nur bei Gebäudeeigennamen gesetzt."
                    },
                    "bbox" : {
                      "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/polygonGeoJSON"
                    },
                    "measuredHeight" : {
                      "title" : "Gebäudehöhe [m]",
                      "type" : "number",
                      "description" : "Höhe des Gebäudes aus der Differenz in Metern zwischen dem höchsten Bezugspunkt und dem tiefsten Bezugspunkt des Gebäudes."
                    },
                    "storeysAboveGround" : {
                      "title" : "Geschosse",
                      "type" : "integer",
                      "format" : "int32"
                    },
                    "roofType" : {
                      "title" : "Dachform",
                      "type" : "string",
                      "description" : "Die Bedeutung der einzelnen Werte ergibt aus der Codelist <a href=\"https://repository.gdi-de.org/schemas/adv/citygml/Codelisten/RoofTypeTypeAdV.xml\" target=\"_blank\">RoofTypeTypeAdV.xml</a>.",
                      "enum" : [ "1000", "2100", "2200", "3100", "3200", "3300", "3400", "3500", "3600", "3700", "3800", "3900", "4000", "5000", "9999" ]
                    },
                    "creationDate" : {
                      "title" : "Erzeugungsdatum",
                      "type" : "string",
                      "format" : "date"
                    },
                    "function" : {
                      "title" : "Gebäudefunktion",
                      "type" : "string",
                      "description" : "Die Bedeutung der einzelnen Werte ergibt aus der Codelist <a href=\"https://repository.gdi-de.org/schemas/adv/citygml/Codelisten/BuildingFunctionTypeAdV.xml\" target=\"_blank\">BuildingFunctionTypeAdV.xml</a>.",
                      "enum" : [ "31001_1000", "31001_1010", "31001_1020", "31001_1021", "31001_1022", "31001_1023", "31001_1024", "31001_1025", "31001_1100", "31001_1110", "31001_1120", "31001_1121", "31001_1122", "31001_1123", "31001_1130", "31001_1131", "31001_1210", "31001_1220", "31001_1221", "31001_1222", "31001_1223", "31001_1310", "31001_1311", "31001_1312", "31001_1313", "31001_2000", "31001_2010", "31001_2020", "31001_2030", "31001_2040", "31001_2050", "31001_2051", "31001_2052", "31001_2053", "31001_2054", "31001_2055", "31001_2056", "31001_2060", "31001_2070", "31001_2071", "31001_2072", "31001_2073", "31001_2074", "31001_2080", "31001_2081", "31001_2082", "31001_2083", "31001_2090", "31001_2091", "31001_2092", "31001_2093", "31001_2094", "31001_2100", "31001_2110", "31001_2111", "31001_2112", "31001_2113", "31001_2114", "31001_2120", "31001_2121", "31001_2130", "31001_2131", "31001_2140", "31001_2141", "31001_2142", "31001_2143", "31001_2150", "31001_2160", "31001_2170", "31001_2171", "31001_2172", "31001_2180", "31001_2200", "31001_2210", "31001_2211", "31001_2212", "31001_2213", "31001_2220", "31001_2310", "31001_2320", "31001_2400", "31001_2410", "31001_2411", "31001_2412", "31001_2420", "31001_2421", "31001_2422", "31001_2423", "31001_2424", "31001_2430", "31001_2431", "31001_2440", "31001_2441", "31001_2442", "31001_2443", "31001_2444", "31001_2450", "31001_2451", "31001_2460", "31001_2461", "31001_2462", "31001_2463", "31001_2464", "31001_2465", "31001_2500", "31001_2501", "31001_2510", "31001_2511", "31001_2512", "31001_2513", "31001_2520", "31001_2521", "31001_2522", "31001_2523", "31001_2527", "31001_2528", "31001_2529", "31001_2540", "31001_2560", "31001_2570", "31001_2571", "31001_2580", "31001_2590", "31001_2591", "31001_2600", "31001_2610", "31001_2611", "31001_2612", "31001_2620", "31001_2621", "31001_2622", "31001_2623", "31001_2700", "31001_2720", "31001_2721", "31001_2723", "31001_2724", "31001_2726", "31001_2727", "31001_2728", "31001_2729", "31001_2732", "31001_2735", "31001_2740", "31001_2741", "31001_2742", "31001_3000", "31001_3010", "31001_3011", "31001_3012", "31001_3013", "31001_3014", "31001_3015", "31001_3016", "31001_3017", "31001_3018", "31001_3019", "31001_3020", "31001_3021", "31001_3022", "31001_3023", "31001_3024", "31001_3030", "31001_3031", "31001_3032", "31001_3033", "31001_3034", "31001_3035", "31001_3036", "31001_3037", "31001_3038", "31001_3040", "31001_3041", "31001_3042", "31001_3043", "31001_3044", "31001_3045", "31001_3046", "31001_3047", "31001_3048", "31001_3050", "31001_3051", "31001_3052", "31001_3053", "31001_3060", "31001_3061", "31001_3062", "31001_3063", "31001_3064", "31001_3065", "31001_3066", "31001_3070", "31001_3071", "31001_3072", "31001_3073", "31001_3074", "31001_3075", "31001_3080", "31001_3081", "31001_3082", "31001_3090", "31001_3091", "31001_3092", "31001_3094", "31001_3095", "31001_3097", "31001_3098", "31001_3100", "31001_3200", "31001_3210", "31001_3211", "31001_3212", "31001_3220", "31001_3221", "31001_3222", "31001_3230", "31001_3240", "31001_3241", "31001_3242", "31001_3260", "31001_3261", "31001_3262", "31001_3263", "31001_3264", "31001_3270", "31001_3271", "31001_3272", "31001_3273", "31001_3280", "31001_3281", "31001_3290", "31001_9998", "51001_1001", "51001_1002", "51001_1003", "51001_1004", "51001_1005", "51001_1006", "51001_1007", "51001_1008", "51001_1009", "51001_1010", "51001_1011", "51001_1012", "51001_9998", "51001_9999", "51002_1215", "51002_1220", "51002_1230", "51002_1250", "51002_1260", "51002_1280", "51002_1290", "51002_1330", "51002_1331", "51002_1332", "51002_1333", "51002_1350", "51002_1400", "51002_9999", "51003_1201", "51003_1205", "51003_1206", "51003_9999", "51006_1430", "51006_1431", "51006_1432", "51006_1440", "51006_1470", "51006_1490", "51006_9999", "51007_1210", "51007_1400", "51007_1500", "51007_1510", "51007_1520", "51007_9999", "51009_1610", "51009_1611", "51009_1750", "51009_9999", "11_1001", "11_1002", "11_1003", "11_1004", "11_1005", "11_1006", "11_1036", "11_1101", "11_1111", "11_1112", "11_1113", "11_1114", "11_1115", "11_1116", "11_1118", "11_1121", "11_1122", "11_1123", "11_1124", "11_1128", "11_1131", "11_1132", "11_1133", "11_1134", "11_1135", "11_1136", "11_1137", "11_1138", "11_1141", "11_1142", "11_1143", "11_1144", "11_1145", "11_1148", "11_1151", "11_1152", "11_1158", "11_1161", "11_1162", "11_1163", "11_1164", "11_1165", "11_1168", "11_1171", "11_1172", "11_1173", "11_1174", "11_1175", "11_1178", "11_1181", "11_1182", "11_1188", "11_1191", "11_1192", "11_1194", "11_1195", "11_1196", "11_1197", "11_1198", "11_1211", "11_1221", "11_1231", "11_1301", "11_1311", "11_1321", "11_1331", "11_1341", "11_1361", "11_1371", "11_1372", "11_1373", "11_1374", "11_1375", "11_1378", "11_1381", "11_1399", "11_1401", "11_1411", "11_1421", "11_1431", "11_1441", "11_1442", "11_1443", "11_1444", "11_1445", "11_1448", "11_1451", "11_1461", "11_1462", "11_1463", "11_1468", "11_1471", "11_1472", "11_1473", "11_1474", "11_1478", "11_1481", "11_1482", "11_1483", "11_1484", "11_1488", "11_1701", "11_1711", "11_1721", "11_1731", "11_1741", "11_1742", "11_1743", "11_1748", "11_1751", "11_1761", "11_1771", "11_1772", "11_1773", "11_1774", "11_1778", "11_1781", "11_1911", "11_1913", "11_2101", "11_2121", "11_2131", "11_2141", "11_2301", "11_2311", "11_2312", "11_2313", "11_2318", "11_2321", "11_2322", "11_2323", "11_2324", "11_2328", "11_2332", "11_2338", "11_2341", "11_2342", "11_2343", "11_2344", "11_2348", "11_2351", "11_2358", "11_2361", "11_2362", "11_2363", "11_2364", "11_2365", "11_2366", "11_2367", "11_2368", "11_2501", "11_2511", "11_2512", "11_2514", "11_2515", "11_2518", "11_2521", "11_2522", "11_2523", "11_2528", "11_2541", "11_2548", "11_2551", "11_2561", "11_2571", "11_2572", "11_2581", "11_2591", "11_2601", "11_2611", "11_2612", "11_2619", "11_2621", "11_2622", "11_2623", "11_2628", "11_2701", "11_2711", "11_2721", "11_2723", "11_2724", "11_2725", "11_2726", "11_2727", "11_2728", "11_2731", "11_2736", "11_2737", "11_2738", "11_2741", "11_2742", "11_2748", "11_2801", "11_2811", "11_2812", "11_2818", "11_2821", "11_2822", "11_2828", "11_2831", "11_2841", "11_2842", "11_2848", "11_2851", "11_2861", "11_2862", "11_2863", "11_2868", "11_2871", "11_2872", "11_2873", "11_2874", "11_2878", "11_2881", "11_2882", "11_2883", "11_2888", "11_2891", "11_2894", "11_2921" ]
                    },
                    "externalReferences" : {
                      "type" : "array",
                      "description" : "ALKIS-Objektidentifikator",
                      "items" : {
                        "title" : "Fachdatenverbindungen",
                        "required" : [ ],
                        "type" : "object",
                        "properties" : {
                          "name" : {
                            "title" : "Bezeichnung",
                            "type" : "string"
                          },
                          "informationSystem" : {
                            "title" : "Informationssystem",
                            "type" : "string"
                          }
                        },
                        "description" : "ALKIS-Objektidentifikator"
                      }
                    },
                    "bezugspunktDach" : {
                      "title" : "Bezugspunkt Dach",
                      "type" : "string",
                      "enum" : [ "1000", "2000", "2100", "2200", "2300", "3000", "4000", "9998" ]
                    },
                    "datenquelleBodenhoehe" : {
                      "title" : "Datenquelle Bodenhöhe",
                      "type" : "string",
                      "enum" : [ "1000", "1100", "1200", "1300", "1400", "1500", "1600", "1700", "1800", "2000", "3000", "4000" ]
                    },
                    "datenquelleDachhoehe" : {
                      "title" : "Datenquelle Dachhöhe",
                      "type" : "string",
                      "enum" : [ "1000", "2000", "3000", "4000", "5000", "6000" ]
                    },
                    "datenquelleLage" : {
                      "title" : "Datenquelle Lage",
                      "type" : "string",
                      "enum" : [ "1000", "1100", "1200", "1300", "2300", "2000", "3000" ]
                    },
                    "gemeindeschluessel" : {
                      "title" : "Gemeindeschlüssel",
                      "type" : "string"
                    },
                    "grundrissaktualitaet" : {
                      "title" : "Grundrissaktualität",
                      "type" : "string",
                      "format" : "date"
                    },
                    "geometrietyp2dReferenz" : {
                      "title" : "Geometrietyp 2D Referenz",
                      "type" : "string"
                    },
                    "address" : {
                      "type" : "array",
                      "items" : {
                        "title" : "Adresse",
                        "required" : [ ],
                        "type" : "object",
                        "properties" : {
                          "multiPoint" : {
                            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/multipointGeoJSON"
                          },
                          "ThoroughfareName" : {
                            "title" : "Straße",
                            "type" : "string"
                          },
                          "ThoroughfareNumber" : {
                            "title" : "Hausnummer",
                            "type" : "string"
                          },
                          "PostalCode" : {
                            "title" : "Postleitzahl",
                            "type" : "string"
                          },
                          "LocalityName" : {
                            "title" : "Stadt",
                            "type" : "string"
                          },
                          "AdministrativeArea" : {
                            "title" : "Verwaltungsbezirk",
                            "type" : "string"
                          },
                          "CountryName" : {
                            "title" : "Land",
                            "type" : "string"
                          }
                        }
                      }
                    },
                    "lod2Solid" : {
                      "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/multipolygonGeoJSON"
                    },
                    "surfaces" : {
                      "type" : "array",
                      "items" : {
                        "title" : "Begrenzungsflächen (LoD 2)",
                        "required" : [ ],
                        "type" : "object",
                        "properties" : {
                          "gml_id" : {
                            "title" : "ID",
                            "type" : "string"
                          },
                          "creationDate" : {
                            "title" : "Erzeugungsdatum",
                            "type" : "string",
                            "format" : "date"
                          },
                          "surfaceType" : {
                            "title" : "Flächentyp",
                            "type" : "string"
                          },
                          "lod2MultiSurface" : {
                            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/multipolygonGeoJSON"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "anyObject" : {
        "type" : "object"
      },
      "Metadata3dSchema" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "classes" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SchemaClass"
            }
          },
          "id" : {
            "type" : "string"
          },
          "enums" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SchemaEnum"
            }
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "SchemaProperty" : {
        "required" : [ "check", "type" ],
        "type" : "object",
        "properties" : {
          "componentType" : {
            "$ref" : "#/components/schemas/ComponentType"
          },
          "check" : {
            "$ref" : "#/components/schemas/void"
          },
          "type" : {
            "$ref" : "#/components/schemas/Type"
          },
          "noData" : {
            "type" : "string"
          },
          "enumType" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "required" : {
            "type" : "boolean"
          }
        }
      },
      "Type" : {
        "type" : "string",
        "enum" : [ "SCALAR", "VEC2", "VEC3", "VEC4", "MAT2", "MAT3", "MAT4", "STRING", "BOOLEAN", "ENUM" ]
      },
      "SchemaEnum" : {
        "required" : [ "check", "valueType" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "check" : {
            "$ref" : "#/components/schemas/void"
          },
          "valueType" : {
            "$ref" : "#/components/schemas/ComponentType"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SchemaEnumValue"
            }
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "SchemaEnumValue" : {
        "required" : [ "name", "value" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "void" : {
        "type" : "object"
      },
      "SchemaClass" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "properties" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/SchemaProperty"
            }
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "ComponentType" : {
        "type" : "string",
        "enum" : [ "INT8", "UINT8", "INT16", "UINT16", "INT32", "UINT32", "INT64", "UINT64", "FLOAT32", "FLOAT64" ]
      },
      "Tileset3dTiles" : {
        "required" : [ "asset", "root" ],
        "type" : "object",
        "properties" : {
          "root" : {
            "$ref" : "#/components/schemas/Tile"
          },
          "asset" : {
            "$ref" : "#/components/schemas/AssetMetadata"
          },
          "schemaUri" : {
            "type" : "string"
          },
          "geometricError" : {
            "type" : "number"
          },
          "extensionsUsed" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "extensionsRequired" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "Content" : {
        "required" : [ "uri" ],
        "type" : "object",
        "properties" : {
          "uri" : {
            "type" : "string"
          }
        }
      },
      "ImplicitTiling" : {
        "required" : [ "availableLevels", "subdivisionScheme", "subtreeLevels", "subtrees" ],
        "type" : "object",
        "properties" : {
          "subtreeLevels" : {
            "type" : "integer",
            "format" : "int32"
          },
          "availableLevels" : {
            "type" : "integer",
            "format" : "int32"
          },
          "subtrees" : {
            "$ref" : "#/components/schemas/Content"
          },
          "subdivisionScheme" : {
            "type" : "string"
          }
        }
      },
      "Tile" : {
        "required" : [ "boundingVolume", "content", "implicitTiling", "refine" ],
        "type" : "object",
        "properties" : {
          "content" : {
            "$ref" : "#/components/schemas/Content"
          },
          "boundingVolume" : {
            "$ref" : "#/components/schemas/BoundingVolume"
          },
          "geometricError" : {
            "type" : "number"
          },
          "refine" : {
            "type" : "string"
          },
          "implicitTiling" : {
            "$ref" : "#/components/schemas/ImplicitTiling"
          }
        }
      },
      "BoundingVolume" : {
        "type" : "object",
        "properties" : {
          "region" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          }
        }
      },
      "AssetMetadata" : {
        "required" : [ "version" ],
        "type" : "object",
        "properties" : {
          "version": {
            "type": "string",
            "description": "The 3D Tiles version. The version defines the JSON schema for the tileset JSON and the base set of tile formats."
          },
          "tilesetVersion": {
            "type": "string",
            "description": "Application-specific version of this tileset, e.g., for when an existing tileset is updated."
          },
          "extensions": {},
          "extras": {}
        }
      },
      "binary" : {
        "type" : "string",
        "format" : "binary"
      }
    },
    "parameters" : {
      "fCommon" : {
        "name" : "f",
        "in" : "query",
        "description" : "Select the output format of the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "html", "json" ]
        }
      },
      "fCollections" : {
        "name" : "f",
        "in" : "query",
        "description" : "Select the output format of the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "html", "json" ]
        }
      },
      "fCollection" : {
        "name" : "f",
        "in" : "query",
        "description" : "Select the output format of the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "html", "json" ]
        }
      },
      "bbox" : {
        "name" : "bbox",
        "in" : "query",
        "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four numbers:\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "maxItems" : 6,
          "minItems" : 4,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "bbox-crsFeatures_building" : {
        "name" : "bbox-crs",
        "in" : "query",
        "description" : "The coordinate reference system of the `bbox` parameter. Default is WGS84 longitude/latitude.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "default" : "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
          "enum" : [ "http://www.opengis.net/def/crs/OGC/1.3/CRS84", "http://www.opengis.net/def/crs/EPSG/0/5555", "http://www.opengis.net/def/crs/EPSG/0/3857", "http://www.opengis.net/def/crs/EPSG/0/4978", "http://www.opengis.net/def/crs/EPSG/0/4979", "http://www.opengis.net/def/crs/EPSG/0/25832" ]
        }
      },
      "clampToEllipsoid" : {
        "name" : "clampToEllipsoid",
        "in" : "query",
        "description" : "If set to `true`, the z coordinates of each feature will be changed so that the bottom of the feature is on the WGS84 ellipsoid. This parameter only affects glTF models.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "boolean"
        }
      },
      "crsFeatures_building" : {
        "name" : "crs",
        "in" : "query",
        "description" : "The coordinate reference system of the response geometries. Default is WGS84 longitude/latitude (with or without height).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "default" : "http://www.opengis.net/def/crs/OGC/0/CRS84h",
          "enum" : [ "http://www.opengis.net/def/crs/OGC/0/CRS84h", "http://www.opengis.net/def/crs/EPSG/0/5555", "http://www.opengis.net/def/crs/EPSG/0/3857", "http://www.opengis.net/def/crs/EPSG/0/4978", "http://www.opengis.net/def/crs/EPSG/0/4979", "http://www.opengis.net/def/crs/EPSG/0/25832" ]
        }
      },
      "datetime" : {
        "name" : "datetime",
        "in" : "query",
        "description" : "Either a date-time or an interval. Date and time expressions adhere to RFC 3339.\nIntervals may be bounded or half-bounded (double-dots at start or end).\nExamples:\n\n* A date-time: \"2018-02-12T23:20:50Z\"\n* A bounded interval: \"2018-02-12T00:00:00Z/2018-03-18T12:31:12Z\"\n* Half-bounded intervals: \"2018-02-12T00:00:00Z/..\" or \"../2018-03-18T12:31:12Z\"\n\nOnly features that have a temporal property that intersects the value of `datetime` are selected.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:[nN][oO][wW])$|^(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])|(?:\\.\\.)?|(?:[nN][oO][wW]))/(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])|(?:\\.\\.)?|(?:[nN][oO][wW]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))|(?:\\.\\.)?|(?:[nN][oO][wW]))/(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))|(?:\\.\\.)?|(?:[nN][oO][wW]))$",
          "type" : "string"
        }
      },
      "fFeatures" : {
        "name" : "f",
        "in" : "query",
        "description" : "Select the output format of the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "cityjson", "cityjsonseq", "glb", "html", "jsonfg", "jsonfgc" ]
        }
      },
      "filter" : {
        "name" : "filter",
        "in" : "query",
        "description" : "Filter features in the collection using the query expression in the parameter value. Filter expressions are written in the Common Query Language (CQL2), which is a candidate OGC standard. This API implements the draft version from February 2022, which is a release candidate. The language for this query parameter is CQL2 Text (`filter-lang=cql2-text`).\n\nCQL2 Text expressions are similar to SQL expressions and also support spatial, temporal and array predicates. All property references must be queryables of the collection and must be declared in the Queryables sub-resource of the collection.\n\nThe following are examples of CQL Text expressions:\n\n* Logical operators (`AND`, `OR`, `NOT`) are supported\n* Simple comparison predicates (`=`, `<>`, `<`, `>`, `<=`, `>=`):\n  * `address.LocalityName = 'Bonn'`\n  * `measuredHeight > 10`\n  * `storeysAboveGround <= 4`\n  * `creationDate > '2017-12-31'`\n  * `creationDate < '2018-01-01'`\n  * `creationDate >= '2018-01-01' AND creationDate <= '2018-12-31'`\n* Advanced comparison operators (`LIKE`, `BETWEEN`, `IN`, `IS NULL`):\n  * `name LIKE '%Kirche%'`\n  * `measuredHeight BETWEEN 10 AND 20`\n  * `address.LocalityName IN ('Bonn', 'Köln', 'Düren')`\n  * `address.LocalityName NOT IN ('Bonn', 'Köln', 'Düren')`\n  * `name IS NULL`\n  * `name IS NOT NULL`\n* Spatial operators (the standard Simple Feature operators, e.g., `S_INTERSECTS`, `S_WITHIN`):\n  * `S_INTERSECTS(bbox, POLYGON((8 52, 9 52, 9 53, 8 53, 8 52)))`\n* Temporal operators (e.g., `T_AFTER`, `T_BEFORE`, `T_INTERSECTS`)\n  * `T_AFTER(creationDate, DATE('2018-01-01'))`\n  * `T_BEFORE(creationDate, DATE('2018-01-01'))`\n  * `T_INTERSECTS(creationDate, INTERVAL('2018-01-01','2018-12-31'))`\n  * `T_INTERSECTS(INTERVAL(begin,end), INTERVAL('2018-01-01','2018-12-31'))`\n\nWarning: The final version of the Common Query Language standard may include changes to the CQL2 Text language supported by this API.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "filter-crs" : {
        "name" : "filter-crs",
        "in" : "query",
        "description" : "Specify which of the supported CRSs to use to encode geometric values in a filter expression (parameter 'filter'). Default is WGS84 longitude/latitude.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "default" : "http://www.opengis.net/def/crs/OGC/0/CRS84h",
          "enum" : [ "http://www.opengis.net/def/crs/OGC/0/CRS84h", "http://www.opengis.net/def/crs/EPSG/0/5555", "http://www.opengis.net/def/crs/EPSG/0/3857", "http://www.opengis.net/def/crs/EPSG/0/4978", "http://www.opengis.net/def/crs/EPSG/0/4979", "http://www.opengis.net/def/crs/EPSG/0/25832", "http://www.opengis.net/def/crs/OGC/1.3/CRS84" ]
        }
      },
      "filter-lang" : {
        "name" : "filter-lang",
        "in" : "query",
        "description" : "Language of the query expression in the 'filter' parameter. Supported are 'cql2-text' (default) and 'cql2-json', specified in the OGC candidate standard 'Common Query Language (CQL2)'. 'cql2-text' is an SQL-like text encoding for filter expressions that also supports spatial, temporal and array predicates. 'cql2-json' is a JSON encoding of that grammar, suitable for use as part of a JSON object that represents a query. The use of 'cql2-text' is recommended for filter expressions in the 'filter' parameter.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "default" : "cql2-text",
          "enum" : [ "cql2-text", "cql2-json" ]
        }
      },
      "limitFeatures_building" : {
        "name" : "limit",
        "in" : "query",
        "description" : "The optional limit parameter limits the number of items that are presented in the response document. Only items are counted that are on the first level of the collection in the response document. Nested objects contained within the explicitly requested items are not counted.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "maximum" : 10000,
          "minimum" : 1,
          "type" : "integer",
          "format" : "int32",
          "default" : 10
        }
      },
      "maxAllowableOffset" : {
        "name" : "maxAllowableOffset",
        "in" : "query",
        "description" : "This option can be used to specify the maxAllowableOffset to be used for simplifying the geometries in the response. The maxAllowableOffset is in the units of the response coordinate reference system.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "number",
          "example" : 0.05,
          "default" : 0
        }
      },
      "offsetFeatures" : {
        "name" : "offset",
        "in" : "query",
        "description" : "The optional offset parameter identifies the index of the first feature in the response in the overall result set.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minimum" : 0,
          "type" : "integer",
          "format" : "int32",
          "default" : 0
        }
      },
      "properties_building" : {
        "name" : "properties",
        "in" : "query",
        "description" : "The properties that should be included for each feature. The parameter value is a comma-separated list of property names. By default, all feature properties with a value are returned.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "gml_id", "name", "measuredHeight", "storeysAboveGround", "roofType", "creationDate", "function", "externalReferences.name", "externalReferences.informationSystem", "bezugspunktDach", "datenquelleBodenhoehe", "datenquelleDachhoehe", "datenquelleLage", "gemeindeschluessel", "grundrissaktualitaet", "geometrietyp2dReferenz", "address.id", "address.multiPoint", "address.ThoroughfareName", "address.ThoroughfareNumber", "address.PostalCode", "address.LocalityName", "address.AdministrativeArea", "address.CountryName", "surfaces.gml_id", "surfaces.creationDate", "surfaces.surfaceType", "surfaces.lod2MultiSurface", "consistsOfBuildingPart.id", "consistsOfBuildingPart.gml_id", "consistsOfBuildingPart.name", "consistsOfBuildingPart.bbox", "consistsOfBuildingPart.measuredHeight", "consistsOfBuildingPart.storeysAboveGround", "consistsOfBuildingPart.roofType", "consistsOfBuildingPart.creationDate", "consistsOfBuildingPart.function", "consistsOfBuildingPart.externalReferences.name", "consistsOfBuildingPart.externalReferences.informationSystem", "consistsOfBuildingPart.bezugspunktDach", "consistsOfBuildingPart.datenquelleBodenhoehe", "consistsOfBuildingPart.datenquelleDachhoehe", "consistsOfBuildingPart.datenquelleLage", "consistsOfBuildingPart.gemeindeschluessel", "consistsOfBuildingPart.grundrissaktualitaet", "consistsOfBuildingPart.geometrietyp2dReferenz", "consistsOfBuildingPart.address.id", "consistsOfBuildingPart.address.multiPoint", "consistsOfBuildingPart.address.ThoroughfareName", "consistsOfBuildingPart.address.ThoroughfareNumber", "consistsOfBuildingPart.address.PostalCode", "consistsOfBuildingPart.address.LocalityName", "consistsOfBuildingPart.address.AdministrativeArea", "consistsOfBuildingPart.address.CountryName", "consistsOfBuildingPart.lod2Solid", "consistsOfBuildingPart.surfaces.gml_id", "consistsOfBuildingPart.surfaces.creationDate", "consistsOfBuildingPart.surfaces.surfaceType", "consistsOfBuildingPart.surfaces.lod2MultiSurface", "consistsOfBuildingPart.building_parent_id" ]
          }
        }
      },
      "skipGeometry_building" : {
        "name" : "skipGeometry",
        "in" : "query",
        "description" : "Use this option to exclude geometries from the response for each feature.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "boolean",
          "default" : false
        }
      },
      "sortby_building" : {
        "name" : "sortby",
        "in" : "query",
        "description" : "Sort the results based on the properties identified by this parameter. The parameter value is a comma-separated list of property names that can be used to sort results (sortables), where each parameter name may be preceeded by a '+' (ascending, default) or '-' (descending).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "name", "+name", "-name", "measuredHeight", "+measuredHeight", "-measuredHeight", "storeysAboveGround", "+storeysAboveGround", "-storeysAboveGround" ]
          }
        }
      },
      "gml_id_building" : {
        "name" : "gml_id",
        "in" : "query",
        "description" : "Filter the collection by property 'gml_id' (ALKIS-ID).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "title" : "ALKIS-ID",
          "type" : "string"
        }
      },
      "name_building" : {
        "name" : "name",
        "in" : "query",
        "description" : "Filter the collection by property 'name' (Name): Only set for proper building names.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "title" : "Name",
          "type" : "string",
          "description" : "Only set for proper building names."
        }
      },
      "function_building" : {
        "name" : "function",
        "in" : "query",
        "description" : "Filter the collection by property 'function' (Gebäudefunktion): The meaning of the individual values results from the codelist <a href=\"https://repository.gdi-de.org/schemas/adv/citygml/Codelisten/BuildingFunctionTypeAdV.xml\" target=\"_blank\">BuildingFunctionTypeAdV.xml</a>.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "title" : "Gebäudefunktion",
          "type" : "string",
          "description" : "The meaning of the individual values results from the codelist <a href=\"https://repository.gdi-de.org/schemas/adv/citygml/Codelisten/BuildingFunctionTypeAdV.xml\" target=\"_blank\">BuildingFunctionTypeAdV.xml</a>.",
          "enum" : [ "31001_1000", "31001_1010", "31001_1020", "31001_1021", "31001_1022", "31001_1023", "31001_1024", "31001_1025", "31001_1100", "31001_1110", "31001_1120", "31001_1121", "31001_1122", "31001_1123", "31001_1130", "31001_1131", "31001_1210", "31001_1220", "31001_1221", "31001_1222", "31001_1223", "31001_1310", "31001_1311", "31001_1312", "31001_1313", "31001_2000", "31001_2010", "31001_2020", "31001_2030", "31001_2040", "31001_2050", "31001_2051", "31001_2052", "31001_2053", "31001_2054", "31001_2055", "31001_2056", "31001_2060", "31001_2070", "31001_2071", "31001_2072", "31001_2073", "31001_2074", "31001_2080", "31001_2081", "31001_2082", "31001_2083", "31001_2090", "31001_2091", "31001_2092", "31001_2093", "31001_2094", "31001_2100", "31001_2110", "31001_2111", "31001_2112", "31001_2113", "31001_2114", "31001_2120", "31001_2121", "31001_2130", "31001_2131", "31001_2140", "31001_2141", "31001_2142", "31001_2143", "31001_2150", "31001_2160", "31001_2170", "31001_2171", "31001_2172", "31001_2180", "31001_2200", "31001_2210", "31001_2211", "31001_2212", "31001_2213", "31001_2220", "31001_2310", "31001_2320", "31001_2400", "31001_2410", "31001_2411", "31001_2412", "31001_2420", "31001_2421", "31001_2422", "31001_2423", "31001_2424", "31001_2430", "31001_2431", "31001_2440", "31001_2441", "31001_2442", "31001_2443", "31001_2444", "31001_2450", "31001_2451", "31001_2460", "31001_2461", "31001_2462", "31001_2463", "31001_2464", "31001_2465", "31001_2500", "31001_2501", "31001_2510", "31001_2511", "31001_2512", "31001_2513", "31001_2520", "31001_2521", "31001_2522", "31001_2523", "31001_2527", "31001_2528", "31001_2529", "31001_2540", "31001_2560", "31001_2570", "31001_2571", "31001_2580", "31001_2590", "31001_2591", "31001_2600", "31001_2610", "31001_2611", "31001_2612", "31001_2620", "31001_2621", "31001_2622", "31001_2623", "31001_2700", "31001_2720", "31001_2721", "31001_2723", "31001_2724", "31001_2726", "31001_2727", "31001_2728", "31001_2729", "31001_2732", "31001_2735", "31001_2740", "31001_2741", "31001_2742", "31001_3000", "31001_3010", "31001_3011", "31001_3012", "31001_3013", "31001_3014", "31001_3015", "31001_3016", "31001_3017", "31001_3018", "31001_3019", "31001_3020", "31001_3021", "31001_3022", "31001_3023", "31001_3024", "31001_3030", "31001_3031", "31001_3032", "31001_3033", "31001_3034", "31001_3035", "31001_3036", "31001_3037", "31001_3038", "31001_3040", "31001_3041", "31001_3042", "31001_3043", "31001_3044", "31001_3045", "31001_3046", "31001_3047", "31001_3048", "31001_3050", "31001_3051", "31001_3052", "31001_3053", "31001_3060", "31001_3061", "31001_3062", "31001_3063", "31001_3064", "31001_3065", "31001_3066", "31001_3070", "31001_3071", "31001_3072", "31001_3073", "31001_3074", "31001_3075", "31001_3080", "31001_3081", "31001_3082", "31001_3090", "31001_3091", "31001_3092", "31001_3094", "31001_3095", "31001_3097", "31001_3098", "31001_3100", "31001_3200", "31001_3210", "31001_3211", "31001_3212", "31001_3220", "31001_3221", "31001_3222", "31001_3230", "31001_3240", "31001_3241", "31001_3242", "31001_3260", "31001_3261", "31001_3262", "31001_3263", "31001_3264", "31001_3270", "31001_3271", "31001_3272", "31001_3273", "31001_3280", "31001_3281", "31001_3290", "31001_9998", "51001_1001", "51001_1002", "51001_1003", "51001_1004", "51001_1005", "51001_1006", "51001_1007", "51001_1008", "51001_1009", "51001_1010", "51001_1011", "51001_1012", "51001_9998", "51001_9999", "51002_1215", "51002_1220", "51002_1230", "51002_1250", "51002_1260", "51002_1280", "51002_1290", "51002_1330", "51002_1331", "51002_1332", "51002_1333", "51002_1350", "51002_1400", "51002_9999", "51003_1201", "51003_1205", "51003_1206", "51003_9999", "51006_1430", "51006_1431", "51006_1432", "51006_1440", "51006_1470", "51006_1490", "51006_9999", "51007_1210", "51007_1400", "51007_1500", "51007_1510", "51007_1520", "51007_9999", "51009_1610", "51009_1611", "51009_1750", "51009_9999", "11_1001", "11_1002", "11_1003", "11_1004", "11_1005", "11_1006", "11_1036", "11_1101", "11_1111", "11_1112", "11_1113", "11_1114", "11_1115", "11_1116", "11_1118", "11_1121", "11_1122", "11_1123", "11_1124", "11_1128", "11_1131", "11_1132", "11_1133", "11_1134", "11_1135", "11_1136", "11_1137", "11_1138", "11_1141", "11_1142", "11_1143", "11_1144", "11_1145", "11_1148", "11_1151", "11_1152", "11_1158", "11_1161", "11_1162", "11_1163", "11_1164", "11_1165", "11_1168", "11_1171", "11_1172", "11_1173", "11_1174", "11_1175", "11_1178", "11_1181", "11_1182", "11_1188", "11_1191", "11_1192", "11_1194", "11_1195", "11_1196", "11_1197", "11_1198", "11_1211", "11_1221", "11_1231", "11_1301", "11_1311", "11_1321", "11_1331", "11_1341", "11_1361", "11_1371", "11_1372", "11_1373", "11_1374", "11_1375", "11_1378", "11_1381", "11_1399", "11_1401", "11_1411", "11_1421", "11_1431", "11_1441", "11_1442", "11_1443", "11_1444", "11_1445", "11_1448", "11_1451", "11_1461", "11_1462", "11_1463", "11_1468", "11_1471", "11_1472", "11_1473", "11_1474", "11_1478", "11_1481", "11_1482", "11_1483", "11_1484", "11_1488", "11_1701", "11_1711", "11_1721", "11_1731", "11_1741", "11_1742", "11_1743", "11_1748", "11_1751", "11_1761", "11_1771", "11_1772", "11_1773", "11_1774", "11_1778", "11_1781", "11_1911", "11_1913", "11_2101", "11_2121", "11_2131", "11_2141", "11_2301", "11_2311", "11_2312", "11_2313", "11_2318", "11_2321", "11_2322", "11_2323", "11_2324", "11_2328", "11_2332", "11_2338", "11_2341", "11_2342", "11_2343", "11_2344", "11_2348", "11_2351", "11_2358", "11_2361", "11_2362", "11_2363", "11_2364", "11_2365", "11_2366", "11_2367", "11_2368", "11_2501", "11_2511", "11_2512", "11_2514", "11_2515", "11_2518", "11_2521", "11_2522", "11_2523", "11_2528", "11_2541", "11_2548", "11_2551", "11_2561", "11_2571", "11_2572", "11_2581", "11_2591", "11_2601", "11_2611", "11_2612", "11_2619", "11_2621", "11_2622", "11_2623", "11_2628", "11_2701", "11_2711", "11_2721", "11_2723", "11_2724", "11_2725", "11_2726", "11_2727", "11_2728", "11_2731", "11_2736", "11_2737", "11_2738", "11_2741", "11_2742", "11_2748", "11_2801", "11_2811", "11_2812", "11_2818", "11_2821", "11_2822", "11_2828", "11_2831", "11_2841", "11_2842", "11_2848", "11_2851", "11_2861", "11_2862", "11_2863", "11_2868", "11_2871", "11_2872", "11_2873", "11_2874", "11_2878", "11_2881", "11_2882", "11_2883", "11_2888", "11_2891", "11_2894", "11_2921" ]
        }
      },
      "roofType_building" : {
        "name" : "roofType",
        "in" : "query",
        "description" : "Filter the collection by property 'roofType' (Dachform): The meaning of the individual values results from the codelist <a href=\"https://repository.gdi-de.org/schemas/adv/citygml/Codelisten/RoofTypeTypeAdV.xml\" target=\"_blank\">RoofTypeTypeAdV.xml</a>.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "title" : "Dachform",
          "type" : "string",
          "description" : "The meaning of the individual values results from the codelist <a href=\"https://repository.gdi-de.org/schemas/adv/citygml/Codelisten/RoofTypeTypeAdV.xml\" target=\"_blank\">RoofTypeTypeAdV.xml</a>.",
          "enum" : [ "1000", "2100", "2200", "3100", "3200", "3300", "3400", "3500", "3600", "3700", "3800", "3900", "4000", "5000", "9999" ]
        }
      },
      "measuredHeight_building" : {
        "name" : "measuredHeight",
        "in" : "query",
        "description" : "Filter the collection by property 'measuredHeight' (Gebäudehöhe [m]): Height of the building as the difference in meters between the highest reference point and the lowest reference point of the building.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "title" : "Gebäudehöhe [m]",
          "type" : "number",
          "description" : "Height of the building as the difference in meters between the highest reference point and the lowest reference point of the building."
        }
      },
      "storeysAboveGround_building" : {
        "name" : "storeysAboveGround",
        "in" : "query",
        "description" : "Filter the collection by property 'storeysAboveGround' (Geschosse).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "title" : "Geschosse",
          "type" : "integer",
          "format" : "int32"
        }
      },
      "address.ThoroughfareName_building" : {
        "name" : "address.ThoroughfareName",
        "in" : "query",
        "description" : "Filter the collection by property 'address.ThoroughfareName' (Adresse > Straße).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "title" : "Adresse > Straße",
          "type" : "string"
        }
      },
      "address.ThoroughfareNumber_building" : {
        "name" : "address.ThoroughfareNumber",
        "in" : "query",
        "description" : "Filter the collection by property 'address.ThoroughfareNumber' (Adresse > Hausnummer).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "title" : "Adresse > Hausnummer",
          "type" : "string"
        }
      },
      "address.PostalCode_building" : {
        "name" : "address.PostalCode",
        "in" : "query",
        "description" : "Filter the collection by property 'address.PostalCode' (Adresse > Postleitzahl).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "title" : "Adresse > Postleitzahl",
          "type" : "string"
        }
      },
      "address.LocalityName_building" : {
        "name" : "address.LocalityName",
        "in" : "query",
        "description" : "Filter the collection by property 'address.LocalityName' (Adresse > Stadt).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "title" : "Adresse > Stadt",
          "type" : "string"
        }
      },
      "consistsOfBuildingPart.roofType_building" : {
        "name" : "consistsOfBuildingPart.roofType",
        "in" : "query",
        "description" : "Filter the collection by property 'consistsOfBuildingPart.roofType' (Gebäudeteile > Dachform): Die Bedeutung der einzelnen Werte ergibt aus der Codelist <a href=\"https://repository.gdi-de.org/schemas/adv/citygml/Codelisten/RoofTypeTypeAdV.xml\" target=\"_blank\">RoofTypeTypeAdV.xml</a>.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "title" : "Gebäudeteile > Dachform",
          "type" : "string",
          "description" : "Die Bedeutung der einzelnen Werte ergibt aus der Codelist <a href=\"https://repository.gdi-de.org/schemas/adv/citygml/Codelisten/RoofTypeTypeAdV.xml\" target=\"_blank\">RoofTypeTypeAdV.xml</a>.",
          "enum" : [ "1000", "2100", "2200", "3100", "3200", "3300", "3400", "3500", "3600", "3700", "3800", "3900", "4000", "5000", "9999" ]
        }
      },
      "consistsOfBuildingPart.measuredHeight_building" : {
        "name" : "consistsOfBuildingPart.measuredHeight",
        "in" : "query",
        "description" : "Filter the collection by property 'consistsOfBuildingPart.measuredHeight' (Gebäudeteile > Gebäudehöhe [m]): Höhe des Gebäudes aus der Differenz in Metern zwischen dem höchsten Bezugspunkt und dem tiefsten Bezugspunkt des Gebäudes.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "title" : "Gebäudeteile > Gebäudehöhe [m]",
          "type" : "number",
          "description" : "Höhe des Gebäudes aus der Differenz in Metern zwischen dem höchsten Bezugspunkt und dem tiefsten Bezugspunkt des Gebäudes."
        }
      },
      "consistsOfBuildingPart.storeysAboveGround_building" : {
        "name" : "consistsOfBuildingPart.storeysAboveGround",
        "in" : "query",
        "description" : "Filter the collection by property 'consistsOfBuildingPart.storeysAboveGround' (Gebäudeteile > Geschosse).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "title" : "Gebäudeteile > Geschosse",
          "type" : "integer",
          "format" : "int32"
        }
      },
      "featureId" : {
        "name" : "featureId",
        "in" : "path",
        "description" : "The local identifier of a feature, unique within the feature collection.",
        "required" : true,
        "schema" : {
          "pattern" : "[^/ ]+",
          "type" : "string"
        }
      },
      "fQueryables" : {
        "name" : "f",
        "in" : "query",
        "description" : "Select the output format of the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "html", "json" ]
        }
      },
      "fSortables" : {
        "name" : "f",
        "in" : "query",
        "description" : "Select the output format of the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "html", "json" ]
        }
      },
      "fStyles" : {
        "name" : "f",
        "in" : "query",
        "description" : "Select the output format of the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "html", "json" ]
        }
      },
      "styleId" : {
        "name" : "styleId",
        "in" : "path",
        "description" : "The local identifier of a style, unique within the API.",
        "required" : true,
        "schema" : {
          "pattern" : "[^/]+",
          "type" : "string"
        }
      },
      "fStyle" : {
        "name" : "f",
        "in" : "query",
        "description" : "Select the output format of the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "3dtiles", "html", "mbs" ]
        }
      },
      "collectionIdStyles" : {
        "name" : "collectionId",
        "in" : "path",
        "description" : "The local identifier of a feature collection.",
        "required" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "building" ]
        }
      },
      "fGltfSchema" : {
        "name" : "f",
        "in" : "query",
        "description" : "Select the output format of the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "json" ]
        }
      },
      "f3dTiles" : {
        "name" : "f",
        "in" : "query",
        "description" : "Select the output format of the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "json" ]
        }
      },
      "level" : {
        "name" : "level",
        "in" : "path",
        "description" : "The level of the subtree or tile.",
        "required" : true,
        "schema" : {
          "pattern" : "\\d+",
          "type" : "string"
        }
      },
      "x" : {
        "name" : "x",
        "in" : "path",
        "description" : "The column of the subtree or tile.",
        "required" : true,
        "schema" : {
          "minimum" : 0,
          "type" : "integer",
          "format" : "int32"
        }
      },
      "y" : {
        "name" : "y",
        "in" : "path",
        "description" : "The row of the subtree or tile.",
        "required" : true,
        "schema" : {
          "minimum" : 0,
          "type" : "integer",
          "format" : "int32"
        }
      }
    }
  }
}
